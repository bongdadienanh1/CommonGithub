http://www.informit.com/articles/article.aspx?p=24604
https://stackoverflow.com/questions/12744613/how-to-call-a-web-service-exposed-on-https
http://ws.apache.org/xmlrpc/ssl.html
https://docs.oracle.com/cd/E12840_01/wls/docs103/security/SSL_client.html#wp1029670
https://www.experts-exchange.com/questions/22421715/Calling-HTTPS-webservices-using-Axis-and-Soap.html
http://pankaj-k.net/WSOverSSL/WSOverSSL-HOWTO.html
https://www.ibm.com/support/knowledgecenter/en/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/twlp_sec_ws_clientcert.html
https://codenotfound.com/spring-ws-https-client-server-example.html
https://www.juniper.net/documentation/en_US/junos-space17.2/topics/task/operational/junos-space-servicenow-tt-web-service-client-setting.html
https://www.guru99.com/security-web-services.html
https://www.mkyong.com/webservices/jax-ws/deploy-jax-ws-web-services-on-tomcat-ssl-connection/
https://wiki.genexus.com/commwiki/servlet/wiki?4443,Consuming+web+services+under+https+in+Java
https://www.java-tips.org/java-ee-tips-100042/156-java-api-for-xml-web-services/1831-using-jax-ws-based-web-services-with-ssl.html
https://dzone.com/articles/ssl-based-https-restful-and-soap-client-applicatio
https://automationrhapsody.com/send-soap-request-over-https-without-valid-certificates/
https://stackoverflow.com/questions/4722644/web-service-client-with-java-application-and-ssl
https://www.jeejava.com/soap-over-https-with-client-certificate-authentication/
https://www.jeejava.com/using-sslsecure-socket-layer-in-jax-ws-webservice/
https://zoltanaltfatter.com/2016/04/30/soap-over-https-with-client-certificate-authentication/
https://github.com/rosarinjroy/SSLContextUtil
https://hc.apache.org/httpcomponents-client-ga/httpclient/examples/org/apache/http/examples/client/ClientCustomSSL.java
https://svn.apache.org/repos/asf/httpcomponents/httpclient/tags/4.5.2/httpclient/src/main/java/org/apache/http/conn/ssl/SSLConnectionSocketFactory.java
https://www.javaworld.com/article/2073950/axis--the-next-generation-of-apache-soap.html
https://javabeat.net/programming-web-services-using-apache-axis/
https://dev.liferay.com/develop/tutorials/-/knowledge_base/6-1/soap-web-services
https://examples.javacodegeeks.com/enterprise-java/jws/jax-ws-client-basic-authentication-example/
https://www.digizol.com/2008/07/web-service-axis-tutorial-client-server.html
https://github.com/amusarra/SugarCRMJavaSOAPClient/tree/master/SOAPClient/src/com/sugarcrm/www/sugarcrm
-------------------

https://dzone.com/articles/troubleshooting-javaxnetsslsslhandshakeexception-r
https://hostadvice.com/how-to/how-to-configure-https-in-apache-tomcat/
https://warwick.ac.uk/services/its/servicessupport/web/sign-on/help/tls1-eol/java/
https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https
https://stackoverflow.com/questions/33364100/how-to-use-tls-1-2-in-java-6
https://stackoverflow.com/questions/8171802/using-bouncycastle-for-a-simple-https-query
https://stackoverflow.com/questions/9749339/does-tomcat-support-tls-v1-2
https://docs.oracle.com/javase/6/docs/technotes/guides/security/SunProviders.html
https://guptaashish.com/2016/07/15/changing-from-tls-v1-0-to-tls-v1-2-from-a-tomcat-java-7-app/
https://serverfault.com/questions/868936/how-to-configure-tomcat-connector-to-use-both-ssl-and-tls-protocols
https://grokbase.com/t/tomcat/users/1335h2v5bg/how-to-allow-only-tls-1-1-connections-to-tomcat-6-0-server-with-https
https://support.globalsign.com/customer/portal/articles/2356063-how-to-enable-or-disable-ssl-and-tls-versions
https://superuser.com/questions/747377/enable-tls-1-1-and-1-2-for-clients-on-java-7
https://www.mkyong.com/tomcat/how-to-configure-tomcat-to-support-ssl-or-https/
https://dzone.com/articles/setting-ssl-tomcat-5-minutes
https://crunchify.com/step-by-step-guide-to-enable-https-or-ssl-correct-way-on-apache-tomcat-server-port-8443/
https://www.supportsages.com/configure-ssl-tomcat-6-7-8-9/
https://geekflare.com/apache-tomcat-hardening-and-security-guide/
https://www.ntu.edu.sg/home/ehchua/programming/howto/Tomcat_HowTo.html

----
keytool -genkeypair -alias MyCert -keyalg RSA -keystore "C:\MyCert.cert"

/**
 * 
 */
package com.test;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;

import javax.net.ssl.*;

/**
 * @author bongdadienanh1
 *
 */
public class SSLClient {
	
	public void myHostVerifier(){
		HostnameVerifier hv = new HostnameVerifier(){

			@Override
			public boolean verify(String arg0, SSLSession arg1) {
				// TODO Auto-generated method stub
				return true;
			}
			
		};
		HttpsURLConnection.setDefaultHostnameVerifier(hv);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		SSLClient client = new SSLClient();
		client.myHostVerifier();
		try{
			URL u = new URL("https://localhost:8443/");
			URLConnection url = u.openConnection();
			InputStreamReader inputStream = new InputStreamReader(url.getInputStream());
			BufferedReader br = new BufferedReader(inputStream);
			String temp = "";
			String response = "";
			while((temp = br.readLine()) != null){
				response += temp + "\n";
			}
			br.close();
			System.out.println(response);
		}catch(Exception e){
			e.printStackTrace();
		}
	}
}
-Djavax.net.ssl.trustStore=C:/MyCert.cert
-Djavax.net.ssl.trustStorePassword=admin@123
-Dhttps.protocols=TLSv1
-Djavax.net.debug=ssl:handshake:verbose
